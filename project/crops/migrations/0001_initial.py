# Generated by Django 4.2.7 on 2025-07-08 07:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CropType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('scientific_name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('crop_image', models.ImageField(upload_to='crop_images/')),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('severity_level', models.CharField(blank=True, max_length=20)),
                ('affected_area_percentage', models.FloatField(blank=True, null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('soil_ph', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='processing', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crop_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crops.croptype')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IoTDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=100, unique=True)),
                ('device_type', models.CharField(choices=[('soil_sensor', 'Soil Sensor'), ('weather_station', 'Weather Station'), ('camera', 'Camera')], max_length=50)),
                ('location', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('last_reading', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('farm_size', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('user_type', models.CharField(choices=[('farmer', 'Farmer'), ('agronomist', 'Agronomist'), ('extension_worker', 'Extension Worker')], default='farmer', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_plan', models.TextField()),
                ('preventive_measures', models.TextField()),
                ('follow_up_actions', models.TextField()),
                ('estimated_recovery_time', models.CharField(blank=True, max_length=50)),
                ('cost_estimate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='crops.diagnosis')),
            ],
        ),
        migrations.CreateModel(
            name='IoTReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('soil_moisture', models.FloatField(blank=True, null=True)),
                ('soil_ph', models.FloatField(blank=True, null=True)),
                ('light_intensity', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crops.iotdevice')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('symptoms', models.TextField()),
                ('treatment', models.TextField()),
                ('prevention', models.TextField()),
                ('severity_levels', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crops.croptype')),
            ],
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='predicted_disease',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crops.disease'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
